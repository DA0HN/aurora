 if(ptr.getCurrent().equals('/') && ptr.getNext().equals('/')) {
                return;
            }
            else if( ptr.getCurrent().equals('"')) {
                buffer = new StringBuilder();
                buffer.append('"');
                do {
                    System.out.print(ptr.getCurrent());
                    ptr.setPrevious(ptr.getCurrent());
                    ptr.setCurrent(line.charAt(index++));
                    buffer.append(ptr.getCurrent());
//                    if(ptr.getCurrent().equals('\n')) {
//                        log.error("missing closing quotes", this.line, this.column);
//                    }
                } while ( !ptr.getCurrent().equals('"'));
                if(ptr.getCurrent().equals('"')){
                    log.message("string_literal", this.line, this.column);
                    this.tokens.add(new TokenContainer(Token.STRING, buffer.toString(),
                                                       this.line, this.column));
                }
                this.column += buffer.length();
                buffer = new StringBuilder();
            }
            else if(Character.isWhitespace(ptr.getCurrent())) {
                updateCharacters(ptr, index, line);
                index++;
            }
//            else if(ptr.getCurrent().equals(":") && ptr.getNext().equals(":")) {
//                buffer.append(ptr.getCurrent())
//                        .append(ptr.getNext());
//                this.column += 2;
//                String temp = line.substring(column, line.length() +1);
//                ptr = new Pointer(temp.charAt(0), temp.charAt(1));
//
//                for(Character c : temp.toCharArray()) {
//                    this.column++;
//                    if( !Symbol.getValues().contains(c) ) {
//                        buffer.append(c);
//                    } else {
//                        break;
//                    }
//                    analyzeBuffer(buffer.toString());
//                }
//
//            }
            else if(Symbol.getValues().contains(ptr.getCurrent().toString())) {
                tokens.add(new TokenContainer(Symbol.toEnum(ptr.getCurrent().toString()),
                                              ptr.getCurrent().toString(), this.line, this.column
                ));
                buffer = new StringBuilder();
                updateCharacters(ptr, index, line);
                index++;
            }
            else if(Character.isWhitespace(ptr.getNext())) {
                buffer.append(ptr.getCurrent());
                analyzeBuffer(buffer.toString());
                this.column += buffer.length();
                buffer = new StringBuilder();
            } else {
                buffer.append(ptr.getCurrent());
                updateCharacters(ptr, index, line);
                index++;
            }